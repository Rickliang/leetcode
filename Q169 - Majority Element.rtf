{\rtf1\ansi\ansicpg1252\cocoartf1344\cocoasubrtf720
{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
\margl1440\margr1440\vieww10800\viewh8400\viewkind0
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural

\f0\fs24 \cf0 #include <unordered_map>\
class Solution \{\
public:\
    int majorityElement(vector<int> &num) \{\
    unordered_map <int,int> count;\
    int size = num.size();\
    int res = 0;\
    if(size ==1)\
        return num[0]; \
    else\{    \
    for(int i =0; i<size; i++)\{\
        auto search = count.find(num[i]);\
        if (search == count.end())\{\
            count.insert (make_pair<int,int>((int)num[i],1));\
            cout<<"inserted"<<num[i]<<endl;\
        \}\
        else \{\
            (search->second)++;\
            if (search->second > size/2)\
            \{\
                res = search->first;\
                break;\
            \}\
        \}\
    \}\
    \}\
    \
    return res;\
\
    \}\
\};}